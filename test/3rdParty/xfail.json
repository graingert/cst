{
    "comments": {
        "basic": {
            "block trailing comment": true,
            "comment within condition": true,
            "export default anonymous class": true,
            "function trailing comma": true,
            "function trailing comma shorthand": true,
            "object property trailing comma": true,
            "shebang import": true,
            "shebang object": true,
            "surrounding call comments": true,
            "surrounding debugger comments": true,
            "surrounding return comments": true,
            "surrounding throw comments": true,
            "surrounding while loop comments": true,
            "switch fallthrough comment": true,
            "switch fallthrough comment in function": true,
            "switch no default comment": true,
            "switch no default comment in function": true,
            "switch no default comment in nested functions": true
        }
    },
    "core": {
        "categorized": {
            "filename specified": true,
            "identifier name loc": true,
            "label kind switch": true,
            "not directive": true,
            "regex after block": true,
            "startline specified": true
        },
        "opts": {
            "ranges false": true,
            "ranges true": true
        },
        "regression": {
            "2591": true
        },
        "uncategorised": {
            "1": true,
            "2": true,
            "3": true,
            "4": true,
            "5": true,
            "6": true,
            "7": true,
            "8": true,
            "9": true,
            "10": true,
            "11": true,
            "12": true,
            "13": true,
            "14": true,
            "15": true,
            "16": true,
            "17": true,
            "18": true,
            "19": true,
            "20": true,
            "21": true,
            "22": true,
            "23": true,
            "24": true,
            "25": true,
            "26": true,
            "27": true,
            "28": true,
            "29": true,
            "30": true,
            "31": true,
            "32": true,
            "33": true,
            "34": true,
            "35": true,
            "36": true,
            "37": true,
            "38": true,
            "39": true,
            "40": true,
            "41": true,
            "42": true,
            "43": true,
            "44": true,
            "45": true,
            "46": true,
            "47": true,
            "48": true,
            "49": true,
            "50": true,
            "51": true,
            "52": true,
            "53": true,
            "54": true,
            "55": true,
            "56": true,
            "57": true,
            "58": true,
            "59": true,
            "60": true,
            "61": true,
            "62": true,
            "63": true,
            "64": true,
            "65": true,
            "66": true,
            "67": true,
            "68": true,
            "69": true,
            "70": true,
            "71": true,
            "72": true,
            "73": true,
            "74": true,
            "75": true,
            "76": true,
            "77": true,
            "78": true,
            "79": true,
            "80": true,
            "81": true,
            "82": true,
            "83": true,
            "84": true,
            "85": true,
            "86": true,
            "87": true,
            "88": true,
            "89": true,
            "90": true,
            "91": true,
            "92": true,
            "93": true,
            "94": true,
            "95": true,
            "96": true,
            "97": true,
            "98": true,
            "99": true,
            "100": true,
            "101": true,
            "102": true,
            "103": true,
            "104": true,
            "105": true,
            "106": true,
            "107": true,
            "108": true,
            "109": true,
            "110": true,
            "111": true,
            "112": true,
            "113": true,
            "114": true,
            "115": true,
            "116": true,
            "117": true,
            "118": true,
            "119": true,
            "120": true,
            "121": true,
            "122": true,
            "123": true,
            "124": true,
            "125": true,
            "126": true,
            "127": true,
            "128": true,
            "129": true,
            "130": true,
            "131": true,
            "132": true,
            "133": true,
            "134": true,
            "135": true,
            "136": true,
            "137": true,
            "138": true,
            "139": true,
            "140": true,
            "141": true,
            "142": true,
            "143": true,
            "144": true,
            "145": true,
            "146": true,
            "147": true,
            "148": true,
            "149": true,
            "150": true,
            "151": true,
            "152": true,
            "153": true,
            "154": true,
            "155": true,
            "156": true,
            "157": true,
            "158": true,
            "159": true,
            "160": true,
            "161": true,
            "162": true,
            "163": true,
            "164": true,
            "165": true,
            "166": true,
            "167": true,
            "168": true,
            "169": true,
            "170": true,
            "171": true,
            "172": true,
            "173": true,
            "174": true,
            "175": true,
            "176": true,
            "177": true,
            "178": true,
            "179": true,
            "180": true,
            "181": true,
            "182": true,
            "183": true,
            "184": true,
            "185": true,
            "186": true,
            "187": true,
            "188": true,
            "189": true,
            "190": true,
            "191": true,
            "192": true,
            "193": true,
            "194": true,
            "195": true,
            "196": true,
            "197": true,
            "198": true,
            "199": true,
            "200": true,
            "201": true,
            "202": true,
            "203": true,
            "204": true,
            "205": true,
            "206": true,
            "207": true,
            "208": true,
            "209": true,
            "210": true,
            "211": true,
            "212": true,
            "213": true,
            "214": true,
            "215": true,
            "216": true,
            "217": true,
            "218": true,
            "219": true,
            "220": true,
            "221": true,
            "222": true,
            "223": true,
            "224": true,
            "225": true,
            "226": true,
            "227": true,
            "228": true,
            "229": true,
            "230": true,
            "231": true,
            "232": true,
            "233": true,
            "234": true,
            "235": true,
            "236": true,
            "237": true,
            "238": true,
            "239": true,
            "240": true,
            "241": true,
            "242": true,
            "243": true,
            "244": true,
            "245": true,
            "246": true,
            "247": true,
            "250": true,
            "251": true,
            "252": true,
            "253": true,
            "254": true,
            "255": true,
            "256": true,
            "257": true,
            "258": true,
            "259": true,
            "260": true,
            "261": true,
            "262": true,
            "263": true,
            "264": true,
            "265": true,
            "266": true,
            "267": true,
            "268": true,
            "269": true,
            "270": true,
            "271": true,
            "272": true,
            "273": true,
            "274": true,
            "275": true,
            "276": true,
            "277": true,
            "278": true,
            "279": true,
            "280": true,
            "281": true,
            "282": true,
            "283": true,
            "284": true,
            "285": true,
            "286": true,
            "287": true,
            "288": true,
            "289": true,
            "290": true,
            "291": true,
            "292": true,
            "293": true,
            "294": true,
            "295": true,
            "296": true,
            "297": true,
            "298": true,
            "299": true,
            "300": true,
            "301": true,
            "302": true,
            "303": true,
            "304": true,
            "305": true,
            "306": true,
            "307": true,
            "308": true,
            "309": true,
            "310": true,
            "311": true,
            "312": true,
            "313": true,
            "314": true,
            "315": true,
            "316": true,
            "317": true,
            "318": true,
            "319": true,
            "320": true,
            "321": true,
            "322": true,
            "323": true,
            "324": true,
            "325": true,
            "326": true,
            "329": true,
            "330": true,
            "331": true,
            "332": true,
            "333": true,
            "334": true,
            "335": true,
            "336": true,
            "337": true,
            "338": true,
            "339": true,
            "340": true,
            "341": true,
            "342": true,
            "343": true,
            "344": true,
            "355": true,
            "356": true,
            "525": true,
            "526": true,
            "527": true,
            "528": true,
            "529": true,
            "530": true,
            "531": true,
            "532": true,
            "533": true,
            "534": true,
            "535": true,
            "537": true,
            "538": true,
            "539": true,
            "540": true,
            "541": true,
            "542": true,
            "543": true,
            "546": true,
            "549": true,
            "551": true,
            "553": true
        }
    },
    "es2015": {
        "array rest spread": {
            "with object": true
        },
        "class methods": {
            "linebreaks": true,
            "tricky names": true
        },
        "computed properties": {
            "call expression": true
        },
        "modules": {
            "duplicate named export builtin": true,
            "duplicate named export destructuring": true,
            "export default function declaration": true,
            "export default function declaration expression disambiguation": true,
            "export default function expression": true
        },
        "regression": {
            "186": true
        },
        "uncategorised": {
            "1": true,
            "2": true,
            "3": true,
            "4": true,
            "5": true,
            "6": true,
            "7": true,
            "8": true,
            "9": true,
            "10": true,
            "11": true,
            "12": true,
            "13": true,
            "14": true,
            "15": true,
            "16": true,
            "17": true,
            "18": true,
            "19": true,
            "20": true,
            "21": true,
            "22": true,
            "23": true,
            "24": true,
            "25": true,
            "26": true,
            "27": true,
            "28": true,
            "29": true,
            "30": true,
            "31": true,
            "32": true,
            "33": true,
            "34": true,
            "35": true,
            "36": true,
            "39": true,
            "40": true,
            "41": true,
            "42": true,
            "43": true,
            "44": true,
            "45": true,
            "46": true,
            "47": true,
            "48": true,
            "49": true,
            "50": true,
            "52": true,
            "53": true,
            "54": true,
            "55": true,
            "56": true,
            "61": true,
            "62": true,
            "63": true,
            "64": true,
            "65": true,
            "66": true,
            "67": true,
            "68": true,
            "69": true,
            "70": true,
            "71": true,
            "72": true,
            "73": true,
            "74": true,
            "75": true,
            "76": true,
            "77": true,
            "78": true,
            "79": true,
            "80": true,
            "81": true,
            "82": true,
            "83": true,
            "85": true,
            "86": true,
            "87": true,
            "88": true,
            "89": true,
            "90": true,
            "91": true,
            "92": true,
            "93": true,
            "94": true,
            "95": true,
            "97": true,
            "98": true,
            "99": true,
            "100": true,
            "101": true,
            "102": true,
            "103": true,
            "104": true,
            "105": true,
            "106": true,
            "107": true,
            "108": true,
            "110": true,
            "111": true,
            "112": true,
            "113": true,
            "114": true,
            "115": true,
            "116": true,
            "117": true,
            "118": true,
            "119": true,
            "120": true,
            "121": true,
            "122": true,
            "123": true,
            "124": true,
            "128": true,
            "129": true,
            "131": true,
            "132": true,
            "133": true,
            "134": true,
            "135": true,
            "136": true,
            "137": true,
            "138": true,
            "139": true,
            "140": true,
            "141": true,
            "142": true,
            "143": true,
            "144": true,
            "145": true,
            "146": true,
            "147": true,
            "148": true,
            "149": true,
            "150": true,
            "152": true,
            "153": true,
            "154": true,
            "155": true,
            "156": true,
            "157": true,
            "158": true,
            "159": true,
            "160": true,
            "161": true,
            "162": true,
            "163": true,
            "164": true,
            "165": true,
            "166": true,
            "167": true,
            "168": true,
            "169": true,
            "170": true,
            "171": true,
            "172": true,
            "173": true,
            "174": true,
            "175": true,
            "176": true,
            "177": true,
            "178": true,
            "179": true,
            "180": true,
            "181": true,
            "182": true,
            "183": true,
            "184": true,
            "185": true,
            "186": true,
            "187": true,
            "188": true,
            "189": true,
            "190": true,
            "192": true,
            "193": true,
            "194": true,
            "195": true,
            "196": true,
            "197": true,
            "256": true,
            "257": true,
            "259": true,
            "279": true,
            "292": true,
            "299": true,
            "300": true,
            "301": true,
            "302": true,
            "303": true,
            "304": true,
            "305": true,
            "306": true,
            "307": true,
            "308": true,
            "309": true,
            "310": true,
            "313": true,
            "314": true,
            "315": true,
            "316": true,
            "317": true,
            "318": true,
            "319": true,
            "320": true,
            "321": true,
            "322": true,
            "323": true,
            "338": true,
            "350": true,
            "351": true,
            "352": true,
            "354": true,
            "355": true,
            "356": true,
            "358": true,
            "360": true,
            "362": true,
            "364": true,
            "366": true,
            "380": true,
            "381": true,
            "382": true,
            "383": true,
            "384": true,
            "385": true,
            "391": true,
            "393": true,
            "394": true,
            ".191": true
        }
    },
    "es2016": {
        "exponentiation operator": {
            "1": true,
            "2": true,
            "3": true,
            "4": true,
            "5": true,
            "6": true,
            "7": true,
            "8": true,
            "9": true
        },
        "simple parameter list": {
            "arrow function concise body": true,
            "async arrow function concise body": true
        }
    },
    "es2017": {
        "async functions": {
            "1": true,
            "7": true,
            "8": true,
            "11": true,
            "12": true,
            "13": true,
            "14": true,
            "15": true,
            "16": true,
            "17": true,
            "18": true,
            "19": true,
            "20": true,
            "21": true,
            "22": true,
            "23": true,
            "24": true,
            "25": true,
            "26": true,
            "27": true,
            "28": true,
            "29": true,
            "30": true,
            "31": true,
            "32": true,
            "33": true,
            "34": true,
            "37": true,
            "38": true,
            "export": true,
            "export arrow": true
        },
        "trailing function commas": {
            "1": true,
            "2": true,
            "3": true,
            "4": true
        }
    },
    "esprima": {
        "automatic semicolon insertion": {
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true,
            "migrated_0003": true,
            "migrated_0004": true,
            "migrated_0005": true,
            "migrated_0006": true,
            "migrated_0007": true,
            "migrated_0008": true,
            "migrated_0009": true,
            "migrated_0010": true,
            "migrated_0011": true,
            "migrated_0012": true,
            "migrated_0013": true,
            "migrated_0014": true,
            "migrated_0015": true
        },
        "declaration const": {
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true
        },
        "declaration function": {
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true,
            "migrated_0003": true,
            "migrated_0004": true,
            "migrated_0005": true,
            "migrated_0006": true,
            "migrated_0007": true,
            "migrated_0008": true,
            "migrated_0009": true,
            "migrated_0010": true,
            "migrated_0011": true,
            "migrated_0012": true,
            "migrated_0013": true,
            "migrated_0014": true
        },
        "declaration let": {
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true,
            "migrated_0003": true
        },
        "directive prolog": {
            "migrated_0000": true,
            "migrated_0001": true
        },
        "es2015 array binding pattern": {
            "array binding pattern 01": true,
            "array binding pattern 02": true,
            "array binding pattern 03": true,
            "array binding pattern empty": true,
            "elision": true
        },
        "es2015 array pattern": {
            "elision": true,
            "empty pattern catch param": true,
            "empty pattern fn": true,
            "empty pattern lexical": true,
            "empty pattern var": true,
            "hole": true,
            "nested pattern": true,
            "patterned catch": true,
            "rest": true,
            "tailing hold": true,
            "with default catch param": true,
            "with default fn": true,
            "with object pattern": true
        },
        "es2015 arrow function": {
            "arrow with multiple arg and rest": true,
            "arrow with only rest": true,
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true,
            "migrated_0003": true,
            "migrated_0004": true,
            "migrated_0005": true,
            "migrated_0006": true,
            "migrated_0007": true,
            "migrated_0008": true,
            "migrated_0009": true,
            "migrated_0010": true,
            "migrated_0011": true,
            "migrated_0012": true,
            "migrated_0013": true,
            "migrated_0014": true,
            "migrated_0015": true,
            "migrated_0016": true,
            "migrated_0017": true,
            "migrated_0018": true,
            "migrated_0019": true,
            "migrated_0020": true,
            "object binding pattern": true
        },
        "es2015 binary integer literal": {
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true,
            "migrated_0003": true,
            "migrated_0004": true,
            "migrated_0005": true
        },
        "es2015 class": {
            ".migrated_0026": true,
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true,
            "migrated_0003": true,
            "migrated_0004": true,
            "migrated_0005": true,
            "migrated_0006": true,
            "migrated_0007": true,
            "migrated_0008": true,
            "migrated_0009": true,
            "migrated_0010": true,
            "migrated_0011": true,
            "migrated_0012": true,
            "migrated_0013": true,
            "migrated_0014": true,
            "migrated_0015": true,
            "migrated_0016": true,
            "migrated_0017": true,
            "migrated_0018": true,
            "migrated_0019": true,
            "migrated_0020": true,
            "migrated_0021": true,
            "migrated_0022": true,
            "migrated_0023": true,
            "migrated_0024": true,
            "migrated_0025": true
        },
        "es2015 default parameter value": {
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true
        },
        "es2015 destructuring assignment array pattern": {
            "dup assignment": true,
            "elision": true,
            "member expr in rest": true,
            "nested assignment": true,
            "nested cover grammar": true,
            "simple assignment": true
        },
        "es2015 destructuring assignment object pattern": {
            "empty object pattern assignment": true,
            "nested cover grammar": true,
            "object pattern assignment": true
        },
        "es2015 export declaration": {
            "export const number": true,
            "export default array": true,
            "export default class": true,
            "export default expression": true,
            "export default function": true,
            "export default named function": true,
            "export default number": true,
            "export default object": true,
            "export default value": true,
            "export from batch": true,
            "export from default": true,
            "export from named as default": true,
            "export from named as specifier": true,
            "export from named as specifiers": true,
            "export from specifier": true,
            "export from specifiers": true,
            "export function": true,
            "export function declaration": true,
            "export let number": true,
            "export named as default": true,
            "export named as specifier": true,
            "export named as specifiers": true,
            "export named empty": true,
            "export named specifier": true,
            "export named specifiers": true,
            "export named specifiers comma": true,
            "export var": true,
            "export var anonymous function": true,
            "export var number": true
        },
        "es2015 for of": {
            "for of": true,
            "for of array pattern": true,
            "for of array pattern let": true,
            "for of object pattern": true,
            "for of object pattern const": true,
            "for of with const": true,
            "for of with let": true,
            "for of with var": true,
            "let of of": true
        },
        "es2015 generator": {
            "generator declaration": true,
            "generator declaration with params": true,
            "generator declaration with yield": true,
            "generator declaration with yield delegate": true,
            "generator expression": true,
            "generator expression rest param": true,
            "generator expression with params": true,
            "generator expression with yield": true,
            "generator expression with yield delegate": true,
            "generator method": true,
            "generator method with computed name": true,
            "generator method with params": true,
            "generator method with yield": true,
            "generator method with yield delegate": true,
            "generator method with yield expression": true,
            "generator method with yield line terminator": true,
            "static generator method": true,
            "static generator method with computed name": true
        },
        "es2015 identifier": {
            "dakuten_handakuten": true,
            "escaped_all": true,
            "escaped_math_alef": true,
            "escaped_math_dal_part": true,
            "escaped_math_kaf_lam": true,
            "escaped_math_zain_start": true,
            "escaped_part": true,
            "escaped_start": true,
            "estimated": true,
            "ethiopic_digits": true,
            "math_alef": true,
            "math_dal_part": true,
            "math_kaf_lam": true,
            "math_zain_start": true,
            "module_await": true,
            "valid_await": true,
            "weierstrass": true,
            "weierstrass_weierstrass": true
        },
        "es2015 import declaration": {
            "import default": true,
            "import default and named specifiers": true,
            "import default and namespace specifiers": true,
            "import default as": true,
            "import jquery": true,
            "import module": true,
            "import named as specifier": true,
            "import named as specifiers": true,
            "import named empty": true,
            "import named specifier": true,
            "import named specifiers": true,
            "import named specifiers comma": true,
            "import namespace specifier": true,
            "import null as nil": true
        },
        "es2015 lexical declaration": {
            "migrated_0000": true
        },
        "es2015 meta property": {
            "assign new target": true,
            "new new target": true,
            "new target declaration": true,
            "new target expression": true,
            "new target invoke": true,
            "new target precedence": true
        },
        "es2015 method definition": {
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true,
            "migrated_0003": true,
            "migrated_0004": true
        },
        "es2015 object initialiser": {
            "proto identifier getter": true,
            "proto identifier getter setter": true,
            "proto identifier method": true,
            "proto identifier setter": true,
            "proto literal getter": true,
            "proto literal getter setter": true,
            "proto literal method": true,
            "proto literal setter": true
        },
        "es2015 object literal property value shorthand": {
            "migrated_0000": true
        },
        "es2015 object pattern": {
            "elision": true,
            "empty catch param": true,
            "empty fn": true,
            "empty for lex": true,
            "empty lexical": true,
            "empty var": true,
            "nested": true,
            "properties": true
        },
        "es2015 octal integer literal": {
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true,
            "migrated_0003": true,
            "migrated_0004": true,
            "migrated_0005": true,
            "migrated_0006": true
        },
        "es2015 rest parameter": {
            "function declaration": true,
            "function expression": true,
            "object method": true,
            "object shorthand method": true
        },
        "es2015 spread element": {
            "call multi spread": true,
            "call spread": true,
            "call spread default": true,
            "call spread first": true,
            "call spread number": true,
            "new multi spread": true,
            "new spread": true,
            "new spread default": true,
            "new spread first": true,
            "new spread number": true
        },
        "es2015 super property": {
            "arrow_super": true,
            "constructor_super": true,
            "new_super": true,
            "super_computed": true,
            "super_member": true
        },
        "es2015 template literals": {
            "dollar sign": true,
            "escape sequences": true,
            "line terminators": true,
            "literal escape sequences": true,
            "new expression": true,
            "tagged": true,
            "tagged interpolation": true,
            "tagged nested with object literal": true,
            "untagged": true
        },
        "es2015 unicode code point escape sequence": {
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true
        },
        "es2015 yield": {
            ".yield generator arrow concise body": true,
            ".yield generator function expression": true,
            ".yield generator function parameter": true,
            "yield array pattern": true,
            "yield arrow concise body": true,
            "yield arrow function body": true,
            "yield arrow parameter default": true,
            "yield arrow parameter name": true,
            "yield binding element": true,
            "yield binding property": true,
            "yield call expression property": true,
            "yield catch parameter": true,
            "yield expression precedence": true,
            "yield function declaration": true,
            "yield function declaration formal parameter": true,
            "yield function expression": true,
            "yield function expression parameter": true,
            "yield generator arrow default": true,
            "yield generator arrow function body": true,
            "yield generator declaration": true,
            "yield generator default parameter": true,
            "yield generator method": true,
            "yield generator parameter object pattern": true,
            "yield lexical declaration": true,
            "yield member expression property": true,
            "yield method": true,
            "yield parameter object pattern": true,
            "yield rest parameter": true,
            "yield strict binding property": true,
            "yield strict method": true,
            "yield super property": true,
            "yield variable declaration": true,
            "yield yield expression": true,
            "yield yield expression delegate": true
        },
        "expression additive": {
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true
        },
        "expression assignment": {
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true,
            "migrated_0003": true,
            "migrated_0004": true,
            "migrated_0005": true,
            "migrated_0006": true,
            "migrated_0007": true,
            "migrated_0008": true,
            "migrated_0009": true,
            "migrated_0010": true,
            "migrated_0011": true,
            "migrated_0012": true,
            "migrated_0013": true
        },
        "expression binary": {
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true,
            "migrated_0003": true,
            "migrated_0004": true,
            "migrated_0005": true,
            "migrated_0006": true,
            "migrated_0007": true,
            "migrated_0008": true,
            "migrated_0009": true,
            "migrated_0010": true,
            "migrated_0011": true,
            "migrated_0012": true,
            "migrated_0013": true,
            "migrated_0014": true,
            "migrated_0015": true,
            "migrated_0016": true,
            "migrated_0017": true
        },
        "expression binary bitwise": {
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true
        },
        "expression binary logical": {
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true,
            "migrated_0003": true,
            "migrated_0004": true,
            "migrated_0005": true
        },
        "expression bitwise shift": {
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true
        },
        "expression complex": {
            "migrated_0000": true
        },
        "expression conditional": {
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true
        },
        "expression equality": {
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true,
            "migrated_0003": true
        },
        "expression grouping": {
            "migrated_0000": true,
            "migrated_0001": true
        },
        "expression left hand side": {
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true,
            "migrated_0003": true,
            "migrated_0004": true,
            "migrated_0005": true,
            "migrated_0006": true,
            "migrated_0007": true,
            "migrated_0008": true,
            "migrated_0009": true,
            "migrated_0010": true,
            "migrated_0011": true,
            "migrated_0012": true,
            "migrated_0013": true,
            "migrated_0014": true,
            "migrated_0015": true,
            "migrated_0016": true,
            "migrated_0017": true,
            "migrated_0018": true,
            "migrated_0019": true,
            "migrated_0020": true,
            "migrated_0021": true,
            "migrated_0022": true
        },
        "expression multiplicative": {
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true
        },
        "expression postfix": {
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true,
            "migrated_0003": true,
            "migrated_0004": true,
            "migrated_0005": true
        },
        "expression primary": {
            "array": true,
            "literal": true,
            "object": true,
            "other": true
        },
        "expression relational": {
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true,
            "migrated_0003": true,
            "migrated_0004": true,
            "migrated_0005": true,
            "migrated_0006": true
        },
        "expression unary": {
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true,
            "migrated_0003": true,
            "migrated_0004": true,
            "migrated_0005": true,
            "migrated_0006": true,
            "migrated_0007": true,
            "migrated_0008": true,
            "migrated_0009": true,
            "migrated_0010": true,
            "migrated_0011": true,
            "migrated_0012": true
        },
        "rest parameter": {
            "arrow rest parameter array": true,
            "arrow rest parameter object": true,
            "function declaration": true,
            "function expression": true,
            "invalid setter rest": true,
            "object method": true,
            "object shorthand method": true,
            "rest parameter array": true,
            "rest parameter object": true
        },
        "statement block": {
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true
        },
        "statement break": {
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true,
            "migrated_0003": true
        },
        "statement continue": {
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true,
            "migrated_0003": true,
            "migrated_0004": true
        },
        "statement debugger": {
            "migrated_0000": true
        },
        "statement empty": {
            "migrated_0000": true
        },
        "statement expression": {
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true,
            "migrated_0003": true,
            "migrated_0004": true,
            "migrated_0005": true
        },
        "statement if": {
            ".migrated_0003": true,
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true,
            "migrated_0004": true,
            "migrated_0005": true,
            "migrated_0006": true
        },
        "statement iteration": {
            ".migrated_0021": true,
            ".pattern in for in": true,
            "const_forin": true,
            "for statement with seq": true,
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true,
            "migrated_0003": true,
            "migrated_0004": true,
            "migrated_0005": true,
            "migrated_0006": true,
            "migrated_0007": true,
            "migrated_0008": true,
            "migrated_0009": true,
            "migrated_0010": true,
            "migrated_0011": true,
            "migrated_0012": true,
            "migrated_0013": true,
            "migrated_0014": true,
            "migrated_0015": true,
            "migrated_0016": true,
            "migrated_0017": true,
            "migrated_0018": true,
            "migrated_0020": true,
            "migrated_0024": true,
            "migrated_0025": true,
            "migrated_0026": true
        },
        "statement labelled": {
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true
        },
        "statement return": {
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true,
            "migrated_0003": true
        },
        "statement switch": {
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true
        },
        "statement throw": {
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true
        },
        "statement try": {
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true,
            "migrated_0003": true,
            "migrated_0004": true,
            "migrated_0005": true,
            "migrated_0006": true
        },
        "statement variable": {
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true,
            "migrated_0003": true,
            "migrated_0004": true,
            "migrated_0005": true,
            "migrated_0006": true
        },
        "statement with": {
            "migrated_0000": true,
            "migrated_0001": true,
            "migrated_0002": true
        }
    },
    "estree": {
        "class method": {
            "basic": true
        },
        "directives": {
            "block": true,
            "function non strict": true,
            "program": true,
            "program order": true,
            "raw": true
        },
        "flow": {
            "string literal annotation": true
        },
        "literal": {
            "boolean": true,
            "null": true,
            "number": true,
            "regexp": true,
            "string": true
        },
        "object method": {
            "basic": true
        },
        "object property": {
            "basic": true
        }
    },
    "experimental": {
        "async functions": {
            "object default params": true
        },
        "async generators": {
            "class method": true,
            "class method 2": true,
            "for await": true,
            "object method": true
        },
        "class private properties": {
            "asi success": true,
            "inline": true,
            "pbn success": true
        },
        "class properties": {
            "asi success": true,
            "computed": true,
            "edge cases": true,
            "inline": true,
            "super": true
        },
        "decorators": {
            "class decorator": true,
            "class decorator call expr": true,
            "class method parameter": true,
            "computed member expr on prop": true,
            "computed member expression": true,
            "export decorators on class": true,
            "export default declaration function declaration parameter": true,
            "export default with nested class": true,
            "function declaration parameter": true,
            "function expression parameter": true,
            "object method parameter": true
        },
        "dynamic import": {
            "generator": true,
            "inside function": true,
            "no plugin": true,
            "parses module": true,
            "parses strict": true,
            "return value": true,
            "top level": true,
            "variable arguments": true
        },
        "export extensions": {
            "default": true,
            "default and ns": true,
            "default type without flow": true,
            "ns": true,
            "ns default": true
        },
        "function sent": {
            "inside generator": true
        },
        "numeric literal separator": {
            "valid 0": true,
            "valid 1": true,
            "valid 10": true,
            "valid 11": true,
            "valid 2": true,
            "valid 3": true,
            "valid 4": true,
            "valid 5": true,
            "valid 6": true,
            "valid 7": true,
            "valid 8": true,
            "valid 9": true
        },
        "template literal invalid escapes tagged": {
            "1": true,
            "2": true,
            "3": true,
            "4": true,
            "5": true,
            "6": true,
            "7": true,
            "8": true,
            "9": true,
            "10": true,
            "11": true,
            "12": true,
            "13": true,
            "14": true,
            "15": true,
            "16": true,
            "17": true,
            "18": true,
            "19": true,
            "20": true,
            "21": true,
            "22": true,
            "23": true,
            "24": true,
            "25": true,
            "26": true,
            "27": true,
            "28": true,
            "29": true,
            "30": true,
            "31": true,
            "32": true,
            "33": true,
            "34": true,
            "35": true,
            "36": true,
            "37": true,
            "38": true,
            "39": true,
            "40": true,
            "41": true,
            "42": true,
            "43": true,
            "44": true,
            "45": true,
            "46": true,
            "47": true,
            "48": true,
            "49": true,
            "50": true,
            "51": true,
            "52": true,
            "53": true,
            "54": true,
            "55": true,
            "56": true,
            "57": true,
            "58": true,
            "59": true,
            "60": true,
            "61": true,
            "62": true,
            "63": true,
            "64": true,
            "65": true,
            "66": true,
            "67": true,
            "68": true
        },
        "uncategorised": {
            "33": true,
            "34": true,
            "35": true,
            "36": true,
            "37": true,
            "38": true,
            "39": true,
            "40": true,
            "43": true,
            "44": true,
            "45": true,
            "46": true,
            "47": true,
            "48": true,
            "49": true,
            "50": true,
            "51": true,
            "52": true,
            "53": true,
            "54": true,
            "62": true
        }
    },
    "flow": {
        "anonymous function no parens types": {
            "good_01": true,
            "good_02": true,
            "good_03": true,
            "good_04": true,
            "good_05": true,
            "good_06": true,
            "good_07": true,
            "good_08": true,
            "good_09": true,
            "good_10": true,
            "good_11": true,
            "good_12": true
        },
        "anonymous function types": {
            "good_01": true,
            "good_02": true,
            "good_03": true,
            "good_04": true,
            "good_05": true,
            "good_06": true,
            "good_07": true,
            "good_08": true,
            "good_09": true,
            "good_10": true,
            "good_11": true,
            "good_12": true,
            "good_13": true,
            "good_14": true
        },
        "array types": {
            "1": true,
            "2": true,
            "3": true,
            "4": true,
            "5": true,
            "6": true,
            "7": true,
            "8": true,
            "9": true
        },
        "bounded polymorphism": {
            "1": true,
            "2": true
        },
        "call properties": {
            "1": true,
            "2": true,
            "3": true,
            "4": true,
            "5": true
        },
        "class properties": {
            "getter setter": true,
            "invalid named static": true,
            "named static": true
        },
        "classes": {
            "constructor override with class prop plugin": true,
            "constructor with class prop plugin": true
        },
        "comment": {
            "spread": true
        },
        "declare export": {
            "export class": true,
            "export default arrow": true,
            "export default class": true,
            "export default function": true,
            "export default union": true,
            "export from": true,
            "export function": true,
            "export interface": true,
            "export interface and var": true,
            "export interface commonjs": true,
            "export named pattern": true,
            "export star": true,
            "export star as": true,
            "export type": true,
            "export type and var": true,
            "export type commonjs": true,
            "export var": true
        },
        "declare module": {
            "1": true,
            "2": true,
            "3": true,
            "4": true,
            "5": true,
            "6": true,
            "9": true,
            "10": true,
            "import": true
        },
        "declare statements": {
            "1": true,
            "2": true,
            "3": true,
            "4": true,
            "5": true,
            "6": true,
            "7": true,
            "8": true,
            "9": true,
            "10": true,
            "11": true,
            "12": true,
            "13": true,
            "14": true,
            "15": true,
            "16": true,
            "17": true,
            "18": true
        },
        "def site variance": {
            "1": true
        },
        "interfaces module and script": {
            "1": true,
            "2": true,
            "3": true,
            "4": true,
            "5": true,
            "6": true,
            "7": true,
            "8": true,
            "9": true,
            "10": true
        },
        "literal types": {
            "boolean false": true,
            "boolean true": true,
            "null": true,
            "number binary": true,
            "number float": true,
            "number integer": true,
            "number negative binary": true,
            "number negative float": true,
            "number negative octal": true,
            "number negative octal 2": true,
            "number octal": true,
            "number octal 2": true,
            "string double": true,
            "string single": true
        },
        "object types": {
            "complex param types": true
        },
        "optional type": {
            "1": true,
            "3": true,
            "4": true
        },
        "predicates": {
            "1": true,
            "2": true,
            "3": true,
            "6": true
        },
        "qualified generic type": {
            "1": true,
            "2": true,
            "3": true,
            "4": true
        },
        "regression": {
            "issue 166": true,
            "issue 2083": true,
            "issue 2493": true,
            "issue 264": true,
            "issue 321": true,
            "issue 336": true,
            "issue 92": true
        },
        "trailing function commas type": {
            "1": true
        },
        "tuples": {
            "1": true,
            "2": true,
            "3": true,
            "4": true
        },
        "type alias": {
            "1": true,
            "2": true,
            "3": true,
            "4": true,
            "5": true
        },
        "type annotations": {
            "1": true,
            "2": true,
            "3": true,
            "4": true,
            "5": true,
            "6": true,
            "7": true,
            "8": true,
            "9": true,
            "10": true,
            "11": true,
            "12": true,
            "13": true,
            "14": true,
            "15": true,
            "16": true,
            "17": true,
            "18": true,
            "19": true,
            "20": true,
            "21": true,
            "22": true,
            "23": true,
            "24": true,
            "25": true,
            "26": true,
            "27": true,
            "28": true,
            "29": true,
            "30": true,
            "31": true,
            "32": true,
            "33": true,
            "34": true,
            "35": true,
            "36": true,
            "37": true,
            "38": true,
            "39": true,
            "40": true,
            "41": true,
            "42": true,
            "43": true,
            "44": true,
            "45": true,
            "46": true,
            "47": true,
            "48": true,
            "49": true,
            "50": true,
            "51": true,
            "52": true,
            "53": true,
            "54": true,
            "55": true,
            "56": true,
            "57": true,
            "58": true,
            "59": true,
            "60": true,
            "61": true,
            "62": true,
            "63": true,
            "64": true,
            "65": true,
            "66": true,
            "67": true,
            "68": true,
            "69": true,
            "70": true,
            "71": true,
            "72": true,
            "73": true,
            "74": true,
            "75": true,
            "76": true,
            "77": true,
            "78": true,
            "79": true,
            "80": true,
            "81": true,
            "82": true,
            "83": true,
            "84": true,
            "85": true,
            "86": true,
            "87": true,
            "88": true,
            "89": true,
            "90": true,
            "91": true,
            "92": true,
            "93": true,
            "94": true,
            "95": true,
            "96": true,
            "97": true,
            "98": true,
            "99": true,
            "100": true,
            "101": true,
            "102": true,
            "103": true,
            "104": true,
            "105": true,
            "107": true,
            "108": true,
            "110": true,
            "111": true,
            "114": true,
            "115": true,
            "118": true,
            "119": true,
            "127": true,
            "128": true,
            "129": true,
            "130": true,
            "135": true,
            "136": true,
            "138": true,
            "arrow func return newline": true,
            "builtin": true,
            "existential type param": true,
            "existential type param 2": true,
            "negative number literal": true,
            "with default valid": true
        },
        "type exports": {
            "alias": true,
            "interface": true,
            "specifier": true,
            "specifier from": true
        },
        "type generics": {
            "1": true,
            "2": true
        },
        "type grouping": {
            "1": true,
            "2": true,
            "3": true,
            "4": true
        },
        "type imports": {
            "import type": true,
            "import type shorthand": true
        },
        "type parameter declaration": {
            "arrow_with_jsx": true,
            "arrow_without_jsx": true,
            "class method reserved word": true,
            "declare class method reserved word": true,
            "declare interface method reserved word": true,
            "default": true,
            "interface reserved word": true,
            "object method type param jsx": true,
            "object reserved word": true,
            "type object reserved word": true
        },
        "typecasts": {
            "1": true,
            "2": true,
            "3": true,
            "4": true
        }
    },
    "jsx": {
        "basic": {
            "1": true,
            "2": true,
            "3": true,
            "4": true,
            "5": true,
            "6": true,
            "7": true,
            "8": true,
            "10": true,
            "11": true,
            "12": true,
            "13": true,
            "14": true,
            "15": true,
            "16": true,
            "17": true,
            "18": true,
            "19": true,
            "20": true,
            "21": true,
            "asi": true,
            "empty expression container": true,
            "entity": true,
            "keyword tag": true,
            "namespace tag": true,
            "nonentity": true,
            "nonentity decimal": true,
            "yield tag": true
        },
        "regression": {
            "1": true,
            "2": true,
            "3": true,
            "4": true,
            "5": true,
            "6": true,
            "7": true,
            "issue 2083": true,
            "issue 2114": true,
            "nbsp": true
        }
    },
    "test262": {
        "rest parameter": {
            "array pattern empty": true,
            "array pattern empty with array": true,
            "array pattern empty with leading": true,
            "array pattern empty with object": true,
            "array pattern empty with rest": true,
            "array pattern multi element": true,
            "array pattern multi element with array": true,
            "array pattern multi element with initializer": true,
            "array pattern multi element with leading": true,
            "array pattern multi element with object": true,
            "array pattern multi element with rest": true,
            "array pattern single element": true,
            "array pattern single element with array": true,
            "array pattern single element with initializer": true,
            "array pattern single element with leading": true,
            "array pattern single element with object": true,
            "array pattern single element with rest": true,
            "object pattern empty": true,
            "object pattern empty with array": true,
            "object pattern empty with leading": true,
            "object pattern empty with object": true,
            "object pattern multi element": true,
            "object pattern multi element with array": true,
            "object pattern multi element with initializer": true,
            "object pattern multi element with leading": true,
            "object pattern multi element with object": true,
            "object pattern single element": true,
            "object pattern single element with array": true,
            "object pattern single element with initializer": true,
            "object pattern single element with leading": true,
            "object pattern single element with object": true
        }
    }
}
